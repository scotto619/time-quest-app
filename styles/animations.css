/* ===================================
   TIME QUEST - ANIMATIONS CSS
   Fun animations, transitions, and celebration effects
   =================================== */

/* ===================================
   SCREEN TRANSITION ANIMATIONS
   Smooth transitions between different app screens
   =================================== */

.screen-slide-in-right {
  animation: slideInRight 0.5s ease-out forwards;
}

.screen-slide-in-left {
  animation: slideInLeft 0.5s ease-out forwards;
}

.screen-slide-out-right {
  animation: slideOutRight 0.5s ease-in forwards;
}

.screen-slide-out-left {
  animation: slideOutLeft 0.5s ease-in forwards;
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideOutRight {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

/* Fade transitions for gentler effects */
.screen-fade-in {
  animation: fadeIn 0.6s ease-out forwards;
}

.screen-fade-out {
  animation: fadeOut 0.4s ease-in forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

/* ===================================
   BUTTON ANIMATIONS
   Making buttons feel alive and responsive
   =================================== */

.button-bounce {
  animation: buttonBounce 0.6s ease;
}

@keyframes buttonBounce {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.button-wiggle {
  animation: wiggle 0.8s ease-in-out;
}

@keyframes wiggle {
  0%, 7% { transform: rotateZ(0); }
  15% { transform: rotateZ(-15deg); }
  20% { transform: rotateZ(10deg); }
  25% { transform: rotateZ(-10deg); }
  30% { transform: rotateZ(6deg); }
  35% { transform: rotateZ(-4deg); }
  40%, 100% { transform: rotateZ(0); }
}

.button-pulse {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(74, 144, 226, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(74, 144, 226, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(74, 144, 226, 0);
  }
}

/* ===================================
   CLOCK ANIMATIONS
   Special effects for the time-telling elements
   =================================== */

.clock-tick {
  animation: clockTick 0.3s ease-out;
}

@keyframes clockTick {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

.hand-highlight {
  animation: handGlow 1s ease-in-out;
}

@keyframes handGlow {
  0%, 100% {
    filter: brightness(1);
    transform: scale(1);
  }
  50% {
    filter: brightness(1.5) drop-shadow(0 0 8px currentColor);
    transform: scale(1.05);
  }
}

.clock-celebration {
  animation: clockCelebrate 1.5s ease-in-out;
}

@keyframes clockCelebrate {
  0%, 100% { 
    transform: rotate(0deg) scale(1); 
  }
  25% { 
    transform: rotate(-5deg) scale(1.05); 
  }
  75% { 
    transform: rotate(5deg) scale(1.05); 
  }
}

.minute-marker-highlight {
  animation: markerPop 0.5s ease-out;
}

@keyframes markerPop {
  0% { 
    transform: scale(1);
    background: var(--primary-blue);
  }
  50% { 
    transform: scale(1.5);
    background: var(--primary-orange);
  }
  100% { 
    transform: scale(1);
    background: var(--primary-blue);
  }
}

/* ===================================
   SUCCESS & CELEBRATION ANIMATIONS
   Fun effects when kids get answers right
   =================================== */

.success-celebration {
  position: relative;
  animation: successBounce 0.8s ease-out;
}

@keyframes successBounce {
  0% { transform: scale(1); }
  30% { transform: scale(1.2); }
  60% { transform: scale(0.95); }
  100% { transform: scale(1); }
}

/* Confetti effect */
.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
  overflow: hidden;
}

.confetti-piece {
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 2px;
  animation: confetti-fall 3s linear forwards;
}

.confetti-piece:nth-child(odd) {
  background: var(--primary-orange);
  animation-duration: 3.5s;
}

.confetti-piece:nth-child(even) {
  background: var(--primary-green);
  animation-duration: 3s;
}

.confetti-piece:nth-child(3n) {
  background: var(--primary-blue);
  animation-duration: 2.8s;
  border-radius: 50%;
}

.confetti-piece:nth-child(4n) {
  background: var(--primary-purple);
  animation-duration: 3.2s;
}

@keyframes confetti-fall {
  0% {
    transform: translateY(-100vh) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(720deg);
    opacity: 0;
  }
}

/* Stars effect */
.stars-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.star-burst {
  position: absolute;
  font-size: var(--font-xxl);
  animation: starBurst 1.5s ease-out forwards;
}

@keyframes starBurst {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: scale(1.5) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(0.5) rotate(360deg);
    opacity: 0;
  }
}

/* ===================================
   ERROR FEEDBACK ANIMATIONS
   Gentle animations for incorrect answers
   =================================== */

.error-shake {
  animation: errorShake 0.5s ease-in-out;
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.try-again-bounce {
  animation: tryAgainBounce 1s ease-in-out infinite;
}

@keyframes tryAgainBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-8px);
  }
  60% {
    transform: translateY(-4px);
  }
}

/* ===================================
   MASCOT ANIMATIONS
   Bringing Tim the Time Traveler to life
   =================================== */

.mascot-excited {
  animation: mascotExcited 2s ease-in-out;
}

@keyframes mascotExcited {
  0%, 100% { 
    transform: scale(1) rotate(0deg); 
  }
  25% { 
    transform: scale(1.1) rotate(-10deg); 
  }
  50% { 
    transform: scale(1.2) rotate(0deg); 
  }
  75% { 
    transform: scale(1.1) rotate(10deg); 
  }
}

.mascot-thinking {
  animation: mascotThinking 2s ease-in-out infinite;
}

@keyframes mascotThinking {
  0%, 100% { 
    transform: rotate(0deg); 
  }
  25% { 
    transform: rotate(-5deg); 
  }
  75% { 
    transform: rotate(5deg); 
  }
}

.mascot-encouraging {
  animation: mascotEncouraging 1.5s ease-in-out;
}

@keyframes mascotEncouraging {
  0%, 100% { 
    transform: scale(1); 
  }
  50% { 
    transform: scale(1.15); 
  }
}

/* Speech bubble animations */
.speech-bubble-pop {
  animation: speechPop 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes speechPop {
  0% {
    transform: scale(0) translateY(10px);
    opacity: 0;
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
}

/* ===================================
   PROGRESS ANIMATIONS
   Visual feedback for learning progress
   =================================== */

.progress-fill-animation {
  animation: progressFill 2s ease-out forwards;
}

@keyframes progressFill {
  from {
    transform: scaleX(0);
    transform-origin: left center;
  }
  to {
    transform: scaleX(1);
    transform-origin: left center;
  }
}

.level-up-animation {
  animation: levelUp 2s ease-out;
}

@keyframes levelUp {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.1);
    filter: brightness(1.5) hue-rotate(90deg);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

.achievement-unlock {
  animation: achievementUnlock 1.5s ease-out;
}

@keyframes achievementUnlock {
  0% {
    transform: scale(0) rotate(-180deg);
    opacity: 0;
  }
  50% {
    transform: scale(1.2) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

/* ===================================
   GAME ELEMENT ANIMATIONS
   Special effects for interactive elements
   =================================== */

.card-flip {
  animation: cardFlip 0.8s ease-in-out;
}

@keyframes cardFlip {
  0% { transform: rotateY(0deg); }
  50% { transform: rotateY(90deg); }
  100% { transform: rotateY(0deg); }
}

.slide-in-bottom {
  animation: slideInBottom 0.5s ease-out;
}

@keyframes slideInBottom {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.zoom-in {
  animation: zoomIn 0.4s ease-out;
}

@keyframes zoomIn {
  from {
    transform: scale(0);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* ===================================
   TIMER ANIMATIONS
   Visual countdown and timing effects
   =================================== */

.timer-tick {
  animation: timerTick 1s linear infinite;
}

@keyframes timerTick {
  0%, 50% { 
    color: var(--text-primary); 
    transform: scale(1);
  }
  51%, 100% { 
    color: var(--text-warning); 
    transform: scale(1.05);
  }
}

.timer-urgent {
  animation: timerUrgent 0.5s ease-in-out infinite;
}

@keyframes timerUrgent {
  0%, 100% { 
    color: var(--text-error);
    transform: scale(1);
  }
  50% { 
    color: #ff6b6b;
    transform: scale(1.1);
  }
}

/* ===================================
   HOVER ANIMATIONS
   Subtle effects when hovering over elements
   =================================== */

.hover-lift {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-lg);
}

.hover-glow {
  transition: filter var(--transition-normal);
}

.hover-glow:hover {
  filter: brightness(1.1) drop-shadow(0 0 8px rgba(74, 144, 226, 0.5));
}

.hover-rotate {
  transition: transform var(--transition-normal);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

/* ===================================
   LOADING ANIMATIONS
   Various loading states and spinners
   =================================== */

.spinner {
  animation: spin 1.5s linear infinite;
}

.dots-loading::after {
  content: '';
  animation: dotsLoading 1.5s infinite;
}

@keyframes dotsLoading {
  0% { content: ''; }
  25% { content: '.'; }
  50% { content: '..'; }
  75% { content: '...'; }
  100% { content: ''; }
}

.pulse-loading {
  animation: pulseLoading 1.5s ease-in-out infinite;
}

@keyframes pulseLoading {
  0%, 100% { 
    opacity: 1; 
    transform: scale(1);
  }
  50% { 
    opacity: 0.5; 
    transform: scale(0.95);
  }
}

/* ===================================
   SPECIAL OCCASION ANIMATIONS
   Extra fun effects for milestones
   =================================== */

.fireworks {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1001;
}

.firework {
  position: absolute;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  animation: firework 2s ease-out forwards;
}

@keyframes firework {
  0% {
    transform: translateY(100vh) scale(0);
    opacity: 1;
  }
  15% {
    transform: translateY(20vh) scale(1);
    opacity: 1;
  }
  100% {
    transform: translateY(20vh) scale(3);
    opacity: 0;
  }
}

.rainbow-text {
  animation: rainbowText 3s linear infinite;
}

@keyframes rainbowText {
  0% { color: #ff0000; }
  16.66% { color: #ff8000; }
  33.33% { color: #ffff00; }
  50% { color: #00ff00; }
  66.66% { color: #0080ff; }
  83.33% { color: #8000ff; }
  100% { color: #ff0000; }
}

/* ===================================
   ACCESSIBILITY ANIMATIONS
   Reduced motion for users who prefer less animation
   =================================== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .floating-element {
    animation: none;
  }
  
  .mascot-body {
    animation: none;
  }
  
  .spinning-clock {
    animation: none;
  }
}

/* ===================================
   PERFORMANCE OPTIMIZATIONS
   Ensure animations run smoothly
   =================================== */

.animate-gpu {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Force hardware acceleration for smooth animations */
.confetti-piece,
.star-burst,
.firework {
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* ===================================
   ANIMATION UTILITIES
   Classes to easily trigger animations from JavaScript
   =================================== */

.animate-in {
  animation: fadeIn 0.5s ease-out forwards;
}

.animate-out {
  animation: fadeOut 0.3s ease-in forwards;
}

.celebrate {
  animation: successBounce 0.8s ease-out;
}

.error {
  animation: errorShake 0.5s ease-in-out;
}

.highlight {
  animation: pulse 1s ease-in-out;
}